[
    {
        "id": "5b6facb2b3b8b657",
        "type": "tab",
        "label": "Flow 4",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3e582d79ec3ca144",
        "type": "inject",
        "z": "5b6facb2b3b8b657",
        "name": "Clock - 1/2 Hz",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "1aa3dc8ff56fc20b"
            ]
        ]
    },
    {
        "id": "1aa3dc8ff56fc20b",
        "type": "function",
        "z": "5b6facb2b3b8b657",
        "name": "convertDate-function",
        "func": "// generando temperatura json\nvar tempAleatorio = Math.floor(Math.random() * (45 - 10)) + 10;\n\n// obteniendo el mensaje del nodo anterior\nvar date = new Date(msg.payload);\n\n// obteniendo datos de interes (fecha y hora)\nlet fh = date.toString();\nlet FH = \"Flow 4, \" + fh.slice(0,(fh.length - 33));\n\n// creando el json\n/*var json = \"{\\\"ID\\\"\\:\\\"Francisco Javier C.G.\\\",\"+\n            \"\\\"Temp\\\"\\:\\\"\"+ tempAleatorio.toString() + \"\\\",\" +\n            \"\\\"mnsg\\\"\\:\\\"Flow 4, \" + date.toString() + \"}\";\n*/\n\nvar myObj = { \"ID\":\"Francisco Javier C.G.\", \n              \"Temp\":tempAleatorio.toString(),\n              \"mnsg\":FH\n            };\n\n// cargar el json\nmsg.payload = JSON.stringify(myObj);\n\n// Regresa el mensaje para que se env√≠e al sigueinte nodo\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 180,
        "wires": [
            [
                "a9a900aa024343d3",
                "5909fd152c8394c2"
            ]
        ]
    },
    {
        "id": "a9a900aa024343d3",
        "type": "mqtt out",
        "z": "5b6facb2b3b8b657",
        "name": "",
        "topic": "codigoIoT/SIC/flow3/temp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "edd3004a.11da88",
        "x": 610,
        "y": 180,
        "wires": []
    },
    {
        "id": "5909fd152c8394c2",
        "type": "debug",
        "z": "5b6facb2b3b8b657",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 80,
        "wires": []
    },
    {
        "id": "edd3004a.11da88",
        "type": "mqtt-broker",
        "name": "",
        "broker": "3.66.119.222",
        "port": "1883",
        "clientid": "FranciscoJavierCG_pub06",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    }
]